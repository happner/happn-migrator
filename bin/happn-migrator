#!/usr/bin/env node

var commander = require('commander');
var path = require('path');

commander

  .version(JSON.parse(require('fs').readFileSync(__dirname + '/../package.json')).version)
  .option('')
  .option('--conf [file]', 'Load mesh config from file/module (js)') // ie. module.exports = {/* the config */}
  .parse(process.argv);

var report = function(message, type){

  if (!type) type = "log";
  message = Date.now() + '  ' + message;
  console[type](message);
};

if (!commander.conf) return report('--conf missing: ' + path.resolve(commander.conf), 'error');

try{

  var configPath = path.resolve(commander.conf);

  var config = require(configPath);

  var Migrator = require('../index.js');
  var migrator = new Migrator(config);

  migrator.on('error', function(e){
    console.error('error:::' + e.toString());
  });

  migrator.on('completed migration', function(state){
    report('migration complete:::');
    report('log file:::' + state.log);
    report('imported records:::' + state.output);
  });

  migrator.on('generated-outputfile', function(outputFile){
    report('generated-outputfile::: ' + outputFile);
  });

  migrator.on('initialized', function(){
    report('migrator initialized:::');
  });

  migrator.initialize(function(e){
    if (e) return report('failed initializing migrator: ' + e.toString(), 'error');

    migrator.start();
  });

}catch(e){
  report('--failed importing config file: ' + configPath + ', error:' + e.toString(), 'error');
}


